/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import { CreateDeviceAndDidArgs } from '../types/CreateDeviceAndDidArgs.js';
/**
 * @category Instructions
 * @category CreateDeviceAndDid
 * @category generated
 */
export type CreateDeviceAndDidInstructionArgs = {
    args: CreateDeviceAndDidArgs;
};
/**
 * @category Instructions
 * @category CreateDeviceAndDid
 * @category generated
 */
export declare const createDeviceAndDidStruct: beet.FixableBeetArgsStruct<CreateDeviceAndDidInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _createDeviceAndDid_ instruction
 *
 * @property [_writable_, **signer**] payer
 * @property [] vendor
 * @property [**signer**] vendorAuthority
 * @property [] product
 * @property [_writable_, **signer**] device
 * @property [_writable_] deviceDid
 * @property [_writable_] treasury
 * @property [] admin
 * @property [] global
 * @category Instructions
 * @category CreateDeviceAndDid
 * @category generated
 */
export type CreateDeviceAndDidInstructionAccounts = {
    payer: web3.PublicKey;
    vendor: web3.PublicKey;
    vendorAuthority: web3.PublicKey;
    product: web3.PublicKey;
    device: web3.PublicKey;
    deviceDid: web3.PublicKey;
    treasury: web3.PublicKey;
    admin: web3.PublicKey;
    global: web3.PublicKey;
    systemProgram?: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const createDeviceAndDidInstructionDiscriminator: number[];
/**
 * Creates a _CreateDeviceAndDid_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category CreateDeviceAndDid
 * @category generated
 */
export declare function createCreateDeviceAndDidInstruction(accounts: CreateDeviceAndDidInstructionAccounts, args: CreateDeviceAndDidInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
//# sourceMappingURL=createDeviceAndDid.d.ts.map